# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- name: resource-group-name
  value: cicd-automated-testing
- name: virtual-machine-name
  value: cicd-virtual-machine
- name: tf-resource-group-name
  value: tstate
- name: tf-storage-account-name
  value: tstate13515
- name: tf-container-name
  value: tstate
- name: tf-blob-key-name
  value: test.cicd.terraform.tfstate
- name: subscriptionConnection
  value: arm-resource-group
- name: terraformDirectory
  value: .

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: AzureCLI@1
  displayName: Terraform credentials
  inputs:
    azureSubscription: '$(subscriptionConnection)'
    scriptLocation: inlineScript
    inlineScript: |
      set -eu  # fail on error
      subscriptionId=$(az account show --query id -o tsv)
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
      echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;issecret=true]$servicePrincipalKey"
      echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscriptionId"
      echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"
      echo "Determining Terraform remote backend information"
      echo "##vso[task.setvariable variable=ACCOUNT_KEY]$(az storage account keys list --resource-group $tf-resource-group-name --account-name $tf-storage-account-name --query '[0].value' -o tsv)"
    addSpnToEnvironment: true
- task: AzureCLI@2
  displayName: 'Terraform init'
  inputs:
    azureSubscription: '$(subscriptionConnection)'
    scriptType: pscore
    scriptLocation: inlineScript
    inlineScript: |
      # Run Terraform
      terraform version
      terraform init `
                     -backend-config="resource_group_name=$(tf-resource-group-name)" `
                     -backend-config="storage_account_name=$(tf-storage-account-name)" `
                     -backend-config="container_name=$(tf-container-name)" `
                     -backend-config="key=$(tf-blob-key-name)" `
                     -backend-config="access_key=$(ACCOUNT_KEY)"
    addSpnToEnvironment: true
    useGlobalConfig: true
    failOnStandardError: true
    powerShellIgnoreLASTEXITCODE: false
    workingDirectory: '$(terraformDirectory)'