# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: AzureCLI@2
  displayName: 'Terraform init'
  inputs:
    azureSubscription: 'arm-resource-group'
    scriptType: pscore
    scriptLocation: inlineScript
    inlineScript: |
      # Propagate pipeline Service Principal as Terraform variables
      $env:ARM_CLIENT_ID       ??= $env:servicePrincipalId
      $env:ARM_CLIENT_SECRET   ??= $env:servicePrincipalKey
      $env:ARM_TENANT_ID       ??= $env:tenantId
      # Propagate from Azure CLI context
      $env:ARM_TENANT_ID       ??= $(az account show --query tenantId -o tsv)
      $env:ARM_SUBSCRIPTION_ID ??= $(az account show --query id -o tsv)              

      # Put Terraform commands after this line
      terraform version
      terraform init
    addSpnToEnvironment: true
    useGlobalConfig: true
    failOnStandardError: true
    powerShellIgnoreLASTEXITCODE: false
    workingDirectory: '.'
